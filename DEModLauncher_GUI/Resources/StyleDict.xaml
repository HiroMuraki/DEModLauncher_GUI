<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:View="clr-namespace:DEModLauncher_GUI.View"
    xmlns:vc="clr-namespace:DEModLauncher_GUI.ValueConverters">
    <Style TargetType="{x:Type View:ModPack}">
        <Setter Property="Background" Value="{StaticResource ModPackItemColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="80" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type View:ModPack}">
                    <Grid>
                        <Grid.Resources>
                            <vc:DoubleGroupToRect x:Key="DoubleGroupToRect" />
                        </Grid.Resources>
                        <Border
                            Margin="2,2,-2,-2"
                            Background="{StaticResource ItemShadowColor}"
                            CornerRadius="5"
                            Opacity="0.5" />
                        <Grid>
                            <Grid.Clip>
                                <RectangleGeometry RadiusX="5" RadiusY="5">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource DoubleGroupToRect}">
                                            <Binding Path="Width" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                            <Binding Path="Height" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Grid.Clip>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="25" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Grid.RowSpan="2">
                                <Border Background="{TemplateBinding Background}" />
                                <Image
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Source="{Binding Path=ImagePath, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Stretch="UniformToFill" />
                                <Border
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3" />
                                <Border
                                    x:Name="MaskBackground"
                                    Background="Black"
                                    Opacity="0.50" />
                            </Grid>
                            <Grid Grid.Row="1">
                                <Border
                                    x:Name="TextMask"
                                    Height="25"
                                    VerticalAlignment="Bottom"
                                    Background="Black"
                                    Opacity="0.70" />
                                <Label
                                    x:Name="TextContent"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Content="{Binding Path=PackName, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Foreground="{StaticResource TextColor}" />
                            </Grid>
                        </Grid>
                        <Border
                            x:Name="PART_TipBorder"
                            BorderBrush="{StaticResource FocusColor}"
                            IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MainColor}" />
                            <Setter Property="Foreground" Value="{StaticResource TextHoveredColor}" />
                        </Trigger>
                        <Trigger Property="Status" Value="Enable">
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter TargetName="TextMask" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="MaskBackground" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="TextContent" Property="Visibility" Value="Hidden" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Height">
                                        <DoubleAnimation
                                            AccelerationRatio="0.2"
                                            DecelerationRatio="0.8"
                                            To="90"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Width">
                                        <DoubleAnimation
                                            AccelerationRatio="0.2"
                                            DecelerationRatio="0.8"
                                            To="200"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Height">
                                        <DoubleAnimation
                                            AccelerationRatio="0.2"
                                            DecelerationRatio="0.8"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Width">
                                        <DoubleAnimation
                                            AccelerationRatio="0.2"
                                            DecelerationRatio="0.8"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type View:ModResource}">
        <Setter Property="Background" Value="{StaticResource ResourceItemColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="7,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type View:ModResource}">
                    <Grid>
                        <Border
                            Margin="2,2,-2,-2"
                            Background="{StaticResource ItemShadowColor}"
                            CornerRadius="2"
                            Opacity="0.15" />
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2" />
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{Binding ResourceName, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        <Border
                            x:Name="PART_TipBorder"
                            BorderBrush="{StaticResource FocusColor}"
                            BorderThickness="0"
                            CornerRadius="2"
                            IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MainColor}" />
                            <Setter Property="Background" Value="{StaticResource FocusColor}" />
                        </Trigger>
                        <Trigger Property="Status" Value="Disable">
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{StaticResource MainColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border
                        Height="30"
                        MinWidth="80"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <Label
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MainColor}" />
                            <Setter Property="Background" Value="{StaticResource FocusColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{StaticResource MainColor}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Grid>
                        <Border
                            Margin="4,4,-4,-4"
                            Background="{StaticResource ItemShadowColor}"
                            CornerRadius="3"
                            Opacity="0.4" />
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MainColor}" />
                            <Setter Property="Background" Value="{StaticResource FocusColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AGButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource MainColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GButtonTitle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.50" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="GAddButton"
        BasedOn="{StaticResource GButton}"
        TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,1,1,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip}" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="Width">
                            <DoubleAnimation
                                AccelerationRatio="0.2"
                                By="60"
                                DecelerationRatio="0.8"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="Width">
                            <DoubleAnimation
                                AccelerationRatio="0.2"
                                DecelerationRatio="0.8"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <Trigger Property="ActualWidth" Value="30">
                <Setter Property="Content" Value="+" />
                <Setter Property="FontSize" Value="18" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GAddButtonStatic"
        BasedOn="{StaticResource GButton}"
        TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,1,1,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip}" />
        <Style.Triggers>
            <Trigger Property="ActualWidth" Value="30">
                <Setter Property="Content" Value="+" />
                <Setter Property="FontSize" Value="18" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>